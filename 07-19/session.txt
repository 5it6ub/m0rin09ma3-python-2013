""" sharevalue """
https://github.com/m0rin09ma3/python-summer-training-2013/blob/master/sharevalue/sharevalue.py

this program takes security symbols and output its share price.

import sys and urllib2 modules

line 48:
use sys.exit() to give 'process return value' to os (non-zero -> error)
if the main function runs without error, it returns 0. then sys.exit(0) is executed.

line 5:
this is my main function and I only create this fuction for this assignment

line 9-14:
if user doesn't provide any symbols, it will warn you.
and exit program with return value 1
and sys.exit(1) will be executed

line 16-29:
I think it is easier to explain this if I give you an example.

if we type 'sharevalue.py GOOG YHOO',

n_argc = len(sys.argv) # line9
n_argc is 3 in this case

l_symbol = [ sys.argv[n] for n in range(1, 3) ] # line17 
l_symbol is ['GOOG','YHOO']

s_symbol = '&'.join( [ 's=' + l_symbol[n] for n in range(2) ] ) # line22
s_symbol is 's=GOOG&s=YHOO'

I use 'list comprehensions' to compose l_symbol and s_symbol.

line 25-29:
s_url becomes 'http://download.finance.yahoo.com/d/quotes.csv?s=GOOG&s=YHOO&f=l1'

line 31-39:
please read http://pymbook.readthedocs.org/en/latest/exceptions.html
I think I should use 'finally' to close file descriptor insted of stating it in else clause.

line42-44:
I just wanted to try various print format.
I used list comprehensions to strip all whitespaces from l_quote so that I can format the output properly.

""" planetparser_rss """
https://github.com/m0rin09ma3/python-summer-training-2013/blob/master/planetparser/planetparser_rss_v2.py

it seems fedoraproject supports various feeds. namely, RSS1.0, RSS2.0, and ATOM.
so I wanted to provide option for user to choose the format from.
I googled it and found 'optionparser'. 
http://docs.python.org/2/library/optparse.html

line2-4:
import sys, feedparser, and OptionParser

line38:
this is already explained earlier. so I'll skip.

line6:
my main function and only function I use for this assignment.

line12-17:
please read the document. provided a link earlier.

line19-24:
create one of the following string.
'http://planet.fedoraproject.org/rss10.xml',
'http://planet.fedoraproject.org/rss20.xml',
'http://planet.fedoraproject.org/atom.xml',

line26-34:
RSS contains author and title in title entry, so I simply output it.
ATOM separate these data into 2 different entries. so I use 'list comprehension' to aggregate author and title data from different entries.
Then I zip them for output.

""" planetparser_rss """
https://github.com/m0rin09ma3/python-summer-training-2013/blob/master/planetparser/planetparser.py

line2-5:
import sys, urllib2, re, and bs4
line38:
use sys.exit() to give 'process return value' to os (non-zero -> error)
if the main function runs without error, main() returns 0. then sys.exit(0) will be executed.
line7:
my main function and only function I use for this assignment.
line13-23:
please read http://pymbook.readthedocs.org/en/latest/exceptions.html
I think I should use 'finally' to close file descriptor insted of stating it in else clause.
line26:
The reason why I extract <div class="blog-entry-header"> tag is because
it contains every author and title data I needed to extract. I could extract each one separately, but I tend to be lazy for doing such a work.
line29-31:
according to the document, 'lxml' is recommended and runs faster. so I tried to use it instead of 'html.parser'
http://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-a-parser
line32-33:
<div class="blog-entry-header"> contains not only author and title data, but also has tags to other information. So I use regular expression to filter out unnecessary tags and retrieve only author and title tags.

